/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

/**
 * A client for validating licenses against the Chipa License Server.
 *
 * This client provides methods to validate license keys for specific applications
 * against a license server. It handles all the necessary communication and
 * validation protocols securely.
 *
 * # Example
 * ```typescript
 * const client = new LicenseClient("https://license.example.com");
 *
 * try {
 *     const token = await client.validateLicense(
 *         "550e8400-e29b-41d4-a716-446655440000",
 *         "my-app"
 *     );
 *     console.log("License validated successfully:", token);
 * } catch (error) {
 *     console.error("License validation failed:", error.message);
 * }
 * ```
 */
export declare class LicenseClient {
  /**
   * Creates a new instance of the license client.
   *
   * # Arguments
   * * `baseUrl` - The base URL of the license server (e.g., "https://license.example.com")
   *
   * # Returns
   * A new `LicenseClient` instance configured with the specified base URL.
   */
  constructor(baseUrl: string)
  /**
   * Updates the base URL of the license server.
   *
   * # Arguments
   * * `url` - The new base URL to use for subsequent license validations
   *
   * # Returns
   * A new `LicenseClient` instance with the updated URL configuration.
   */
  static setUrl(url: string): LicenseClient
  /**
   * Validates a license key for a specific application.
   *
   * # Arguments
   * * `license` - The UUID of the license to validate
   * * `application` - The identifier of the application requesting validation
   *
   * # Returns
   * A Promise that resolves to a validation token string if successful.
   *
   * # Throws
   * Throws an error if:
   * - The license UUID is invalid
   * - The server cannot be reached
   * - The license is invalid or expired
   * - The application is not authorized
   */
  validateLicense(license: string, application: string): Promise<string>
}
